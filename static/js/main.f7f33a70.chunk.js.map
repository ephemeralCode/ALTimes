{"version":3,"sources":["music/soundNotify.mp3","Timer.jsx","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","time","setTime","isActive","startTimer","setStartTimer","Date","savedDate","finishingTime","setFinishingTime","hours","minutes","seconds","remainingTime","setRemainingTime","interval","intervalNotify","removeTime","arrayTimes","JSON","parse","localStorage","getItem","setSaveLocalTime","prev","typeTimer","filter","item","id","USER_TIME","stringify","saveChanges","completedTime","finishTimer","timerFinish","useEffect","current","split","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","toJSON","String","padStart","setInterval","currentTime","countDownTime","getTime","clearInterval","i","showTitle","document","title","window","focus","onmousemove","getAttention","audio","Audio","soundNotify","volume","play","tabTitleNotify","className","onClick","onWheel","e","deltaY","target","options","selectedIndex","value","length","scrollHandler","collectionTimes","map","text","style","cursor","opacity","disabled","App","COMM","BOOK","PROJ","saveLocalTime","commTimes","bookTimes","projTimes","setItem","name","push","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7f33a70.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/soundNotify.40c2f672.mp3\";","import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport soundNotify from '../src/music/soundNotify.mp3';\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [startTimer, setStartTimer] = useState(props.isActive)\r\n    const [finishingTime, setFinishingTime] = useState(\r\n        props.isActive &&\r\n            new Date(props.time.savedDate)\r\n    )\r\n    const [remainingTime, setRemainingTime] = useState({\r\n        hours: '00', \r\n        minutes: '00', \r\n        seconds: '00'\r\n    })\r\n\r\n    const zeroLength = 2;\r\n    const interval = useRef();\r\n    let intervalNotify = useRef();\r\n\r\n    //* timer finishing sound notification\r\n    function tabTitleNotify() {\r\n        let audio = new Audio(soundNotify)\r\n\r\n        audio.volume = 0.3\r\n        audio.play()\r\n    }\r\n\r\n    //* \r\n    function getAttention() {\r\n        let i = 0;\r\n        const showTitle = ['Timer completed!', document.title];\r\n\r\n        window.focus();\r\n    \r\n        intervalNotify = setInterval(() => {          \r\n            document.title = showTitle[i++ % 2];\r\n        }, 1000);\r\n    \r\n        document.onmousemove = function() {\r\n            clearInterval(intervalNotify);\r\n\r\n            document.title = showTitle[1];\r\n            document.onmousemove = null;\r\n        }\r\n    }\r\n\r\n    //* scrollTimer\r\n    const scrollHandler = (e) => {\r\n        if(e.deltaY < 0){\r\n            if(e.target.options.selectedIndex !== 0) {\r\n                e.target.options.selectedIndex--\r\n                setTime(e.target.options[e.target.selectedIndex].value)\r\n            }\r\n        } else if(e.deltaY > 0){\r\n            if(e.target.options.selectedIndex !== e.target.options.length - 1) {\r\n                e.target.options.selectedIndex++\r\n                setTime(e.target.options[e.target.selectedIndex].value)\r\n            }\r\n        }\r\n    }\r\n\r\n    //* remove timer\r\n    const removeTime = () => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [\r\n                    ...prev[props.typeTimer].filter(item => item.id !== props.time.id)\r\n                ]\r\n            }\r\n        })\r\n\r\n        arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(\r\n            item => item.id !== props.time.id\r\n        )\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    const saveChanges = (savedDate, completedTime, isActive, finishTimer) => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            let arrayTimes = [...prev[props.typeTimer]]\r\n            \r\n            arrayTimes[props.id] = {\r\n                id: props.id,\r\n                savedDate: savedDate,\r\n                completedTime: completedTime,\r\n                isActive: isActive,\r\n                timerFinish: finishTimer\r\n            }\r\n\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [...arrayTimes]\r\n            }\r\n        })\r\n        \r\n        arrayTimes[props.typeTimer][props.id] = ({\r\n            id: props.id,\r\n            savedDate: savedDate,\r\n            completedTime: completedTime,\r\n            isActive: isActive,\r\n            timerFinish: finishTimer\r\n        })\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n\r\n            saveChanges(\r\n                finishingTime.toJSON(),\r\n                `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                true,\r\n                false\r\n            )\r\n        } \r\n\r\n    }, [startTimer])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (startTimer) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                const countDownTime = new Date()\r\n\r\n                countDownTime.setHours(finishingTime.getHours() - currentTime.getHours())\r\n                countDownTime.setMinutes(finishingTime.getMinutes() - currentTime.getMinutes())\r\n                countDownTime.setSeconds(finishingTime.getSeconds() - currentTime.getSeconds())\r\n\r\n                if (finishingTime.getTime() - currentTime.getTime() > 0) {\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: countDownTime.getHours(),\r\n                            minutes: countDownTime.getMinutes(),\r\n                            seconds: countDownTime.getSeconds()\r\n                        }\r\n                    })\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n                    })\r\n                    saveChanges(\r\n                        null,\r\n                        `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                        false,\r\n                        true\r\n                    )\r\n\r\n                    getAttention()\r\n                    tabTitleNotify()\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    return (\r\n            <div className='containerTimer'>\r\n                <div className='conteinerTimerStart'>\r\n                    {\r\n                        props.timerFinish &&\r\n                            <button className='completedTimerBtn' onClick={() => {\r\n                                clearInterval(interval.current)\r\n                                didMount.current = false\r\n                                removeTime()\r\n                            }}></button>\r\n                    }\r\n\r\n                    {\r\n                        !props.timerFinish && \r\n                            <button className='removeTimerBtn' onClick={() => {\r\n                                clearInterval(interval.current)\r\n                                didMount.current = false\r\n                                removeTime()\r\n                            }}></button>\r\n                    }\r\n\r\n                    <div className='timer'>\r\n                        <p className='time'>{`\r\n                            ${String(remainingTime.hours).padStart(zeroLength, '0')}:${String(remainingTime.minutes).padStart(zeroLength, '0')}:${String(remainingTime.seconds).padStart(zeroLength, '0')}\r\n                        `}</p>\r\n                        \r\n                        <div className='containerCompletedTimerText'>\r\n                            <p className='completedTimerText'>Completed: </p>\r\n                            <p>{props.time.completedTime}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='containerTimerEnd'>\r\n                    { \r\n                        !props.timerFinish ?\r\n                            !startTimer ? \r\n                                !props.isActive &&\r\n                                    <div className='containerTimerSelect'>\r\n                                        {/* select times */}   \r\n                                        <select \r\n                                            className='timerSelect'\r\n                                            onWheel={(e) => scrollHandler(e)}\r\n                                            onClick={(e) => {\r\n                                                if(e.target.options){\r\n                                                    setTime(e.target.options[e.target.selectedIndex].value)\r\n                                                    return\r\n                                                }\r\n                                                setTime(e.target.value)\r\n                                            }}\r\n                                        > \r\n\r\n                                            <option>Select time</option>\r\n                                            {\r\n                                                props.collectionTimes.map((item, i) => {\r\n                                                    return <option key={i} value={item.value}>{item.text}</option>\r\n                                                })\r\n                                            }  \r\n                                        </select>\r\n                                        \r\n                                        {/* start btn */}\r\n                                        <button \r\n                                            style={time === 'Select time' ? {cursor: 'not-allowed', opacity: '50%'} : {cursor: 'pointer'}}\r\n                                            className='startTimerBtn' \r\n                                            disabled={time === 'Select time' ? true : false} \r\n                                            onClick={() => {\r\n                                                setFinishingTime(new Date())\r\n                                                setStartTimer(true)\r\n                                                didMount.current = true\r\n                                            }}\r\n                                        ></button>\r\n                                    </div>\r\n\r\n                            :\r\n\r\n                            <></>   \r\n\r\n                        :\r\n\r\n                        <></>\r\n                    }\r\n\r\n                    {\r\n                        props.isActive &&\r\n                            <button className='cancelTimerBtn' onClick={() => {\r\n                                clearInterval(interval.current)\r\n                                setStartTimer(false)\r\n                                didMount.current = false\r\n                                setTime('Select time')\r\n                                setRemainingTime((prev) => {\r\n                                    return {\r\n                                        ...prev,\r\n                                        hours: '00',\r\n                                        minutes: '00',\r\n                                        seconds: '00'\r\n                                    }\r\n                                })\r\n                                saveChanges(null, '00:00:00', false, false)\r\n                            }}></button>\r\n                    }\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css';\r\nimport './style/font.css';\r\n\r\nexport default function App() {\r\n    const amountTimers = 4;\r\n    const [saveLocalTime, setSaveLocalTime] = useState({\r\n        COMM: [\r\n            \r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n\r\n    const commTimes = [\r\n        {text: '00:01:00', value: 'COMM_00_01_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},  \r\n    ]\r\n\r\n    // проверка и создание LC\r\n    if (!localStorage.getItem('USER_TIME')) {\r\n        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        if(arrayTimes.COMM.length || arrayTimes.BOOK.length || arrayTimes.PROJ.length) {\r\n            setSaveLocalTime(() => {return arrayTimes})\r\n        }\r\n    }, [0])\r\n\r\n    // создание таймера\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        // сохранение в хук созданного таймера\r\n        setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [typeTimer]: [\r\n                    ...prev[typeTimer], {\r\n                        id: prev[typeTimer].length ? \r\n                                prev[typeTimer][prev[typeTimer].length - 1].id + 1 : 0,\r\n                        savedDate: null,\r\n                        completedTime: '00:00:00',\r\n                        isActive: false,\r\n                        timerFinish: false\r\n                    }\r\n                ],\r\n            }\r\n        })\r\n\r\n        // сохранение в LC таймера\r\n        setSaveLocalTime((prev) => {\r\n            arrayTimes[typeTimer].push({\r\n                id: prev[typeTimer][prev[typeTimer].length - 1].id,\r\n                savedDate: null,\r\n                completedTime: '00:00:00',\r\n                isActive: false,\r\n                timerFinish: false\r\n            })\r\n    \r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n\r\n            return prev\r\n        })     \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='containerBgTitle'>\r\n                <p className='bgTitle'>ALTimes </p>\r\n                <p className='ver'>v. 0.1</p>\r\n            </div>\r\n\r\n            <div className='container'>\r\n                {/*  COMM */}\r\n                <fieldset className='containerTimers'>\r\n                    <legend className='containerTitle'>\r\n                        <p className='commissionTitle'>COMMISSION</p>\r\n                    </legend>\r\n                    \r\n                    <div className='wrapperTimer'>\r\n                        {\r\n                            saveLocalTime.COMM.length ? \r\n                                saveLocalTime.COMM.map((item, i) => { \r\n                                    return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={commTimes}\r\n                                    typeTimer={'COMM'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                    />\r\n                                })\r\n                            \r\n                                : \r\n                            \r\n                                <div className='availableTimerText'>Not found</div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {\r\n                        saveLocalTime.COMM.length !== amountTimers && \r\n                            <div className='containerAddTimerBtn'>\r\n                                <button \r\n                                    name='COMM'\r\n                                    className='addTimerBtn' \r\n                                    onClick={(e) => {setTime(e)}}\r\n                                ></button>\r\n                                \r\n                                <div className='containerTitleAvailable'>\r\n                                    <p className='titleAvailable'>Available:</p><p>{amountTimers - saveLocalTime.COMM.length}</p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </fieldset>\r\n\r\n                {/* BOOK */}\r\n                <fieldset className='containerTimers'>\r\n                    <legend className='containerTitle'>\r\n                        <p>CLASSROOM</p>\r\n                    </legend>\r\n                    \r\n                    <div className='wrapperTimer'>\r\n                        {\r\n                            saveLocalTime.BOOK.length ? \r\n                                saveLocalTime.BOOK.map((item, i) => {\r\n                                    return <Timer \r\n                                        time={item}\r\n                                        key={item.id}\r\n                                        id={i}\r\n                                        setSaveLocalTime={setSaveLocalTime}\r\n                                        collectionTimes={bookTimes}\r\n                                        typeTimer={'BOOK'}\r\n                                        isActive={item.isActive}\r\n                                        timerFinish={item.timerFinish}\r\n                                    />\r\n                                })\r\n                            \r\n                                : \r\n                            \r\n                                <div className='availableTimerText'>Not found</div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {\r\n                        saveLocalTime.BOOK.length !== 4 && \r\n                            <div className='containerAddTimerBtn'>\r\n                                <button \r\n                                    name='BOOK'\r\n                                    className='addTimerBtn' \r\n                                    onClick={(e) => {setTime(e)}}\r\n                                ></button>\r\n\r\n                                <div className='containerTitleAvailable'>\r\n                                    <p className='titleAvailable'>Available:</p><p>{4 - saveLocalTime.BOOK.length}</p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </fieldset>\r\n\r\n                {/* PROJ */}\r\n                <fieldset className='containerTimers'>\r\n                    <legend className='containerTitle'>\r\n                        <p>LAB</p>\r\n                    </legend>\r\n                    \r\n                    <div className='wrapperTimer'>\r\n                        {\r\n                            saveLocalTime.PROJ.length ? \r\n                                saveLocalTime.PROJ.map((item, i) => {\r\n                                    return <Timer \r\n                                        time={item}\r\n                                        key={item.id}\r\n                                        id={i}\r\n                                        setSaveLocalTime={setSaveLocalTime}\r\n                                        collectionTimes={projTimes}\r\n                                        typeTimer={'PROJ'}\r\n                                        isActive={item.isActive}\r\n                                        timerFinish={item.timerFinish}\r\n                                    />\r\n                                })\r\n                            \r\n                                : \r\n                            \r\n                                <div className='availableTimerText'>Not found</div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {\r\n                        saveLocalTime.PROJ.length !== 1 &&\r\n                            <div className='containerAddTimerBtn'>\r\n                                <button \r\n                                    name='PROJ'\r\n                                    className='addTimerBtn' \r\n                                    onClick={(e) => {setTime(e)}}\r\n                                ></button>\r\n\r\n                                <div className='containerTitleAvailable'>\r\n                                    <p className='titleAvailable'>Available:</p><p>{1 - saveLocalTime.PROJ.length}</p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </fieldset>\r\n\r\n                {/* <div>\r\n    \r\n                    <br/>\r\n                    <button onClick = {() => {\r\n                        localStorage.clear()\r\n                        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n                    }}\r\n                        \r\n                    >Update LC</button>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}