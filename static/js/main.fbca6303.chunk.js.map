{"version":3,"sources":["Timer.jsx","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","startTimer","setStartTimer","removeTimer","setRemoveTimer","time","setTime","finishingTime","setFinishingTime","remainingSeconds","remainingMinutes","remainingHours","remainingTime","setRemainingTime","interval","useEffect","current","setSaveLocalTime","prev","typeTimer","filter","item","id","split","hours","minutes","seconds","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","setInterval","currentTime","Date","countDownTime","getTime","test","console","log","getTimezoneOffset","clearInterval","className","String","padStart","onClick","e","target","options","selectedIndex","value","times","map","i","text","disabled","App","amountTimers","setAmountTimers","COMM","BOOK","PROJ","saveLocalTime","commTimes","bookTimes","projTimes","name","length","type","checked","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbca6303.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef()\r\n    const [startTimer, setStartTimer] = useState(false)\r\n    const [removeTimer, setRemoveTimer] = useState(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [finishingTime, setFinishingTime] = useState(0)\r\n    const [remainingTime, setRemainingTime] = useState({\r\n        remainingSeconds: '00',\r\n        remainingMinutes: '00',\r\n        remainingHours: '00'\r\n    })\r\n\r\n    let zeroLength = 2;\r\n    let interval = useRef();\r\n\r\n    //* remove timer\r\n    useEffect(() => {\r\n        if(didMount.current) {\r\n            props.setSaveLocalTime((prev) => {\r\n                return {\r\n                    ...prev, \r\n                    [props.typeTimer]: [\r\n                        ...prev[props.typeTimer].filter(item => item.id !== props.item.id)\r\n                    ]\r\n                }\r\n            })\r\n            \r\n            didMount.current = false\r\n            setRemoveTimer(false)\r\n        } \r\n        \r\n    }, [removeTimer])\r\n\r\n    //* setFinishingTime\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                let countDownTime = new Date()\r\n\r\n                countDownTime.setTime(finishingTime.getTime() - currentTime.getTime())\r\n\r\n                let test = countDownTime.getTime();\r\n\r\n                console.log(test > 0)\r\n                //! GMT\r\n                countDownTime.setHours(countDownTime.getHours() + currentTime.getTimezoneOffset() / 60)\r\n\r\n                if (test > 0) {\r\n                    setRemainingTime({\r\n                        ...remainingTime,\r\n                        remainingSeconds: countDownTime.getSeconds(),\r\n                        remainingMinutes: countDownTime.getMinutes(),\r\n                        remainingHours: countDownTime.getHours()\r\n                    })\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n        \r\n        return () => {\r\n            clearInterval(interval.current)\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    return (\r\n        <div className='timer'>\r\n            <h2>{`\r\n                ${String(remainingTime.remainingHours).padStart(zeroLength, '0')}:\r\n                ${String(remainingTime.remainingMinutes).padStart(zeroLength, '0')}:\r\n                ${String(remainingTime.remainingSeconds).padStart(zeroLength, '0')}\r\n            `}</h2>\r\n\r\n            {\r\n                startTimer ? <button onClick={() => {\r\n                    didMount.current = false\r\n                    setTime('Select time')\r\n                    setStartTimer(false)\r\n                    clearInterval(interval)\r\n                    setFinishingTime(0)\r\n                    setRemainingTime({\r\n                        ...remainingTime,\r\n                        remainingSeconds: '00',\r\n                        remainingMinutes: '00',\r\n                        remainingHours: '00'\r\n                    })\r\n                }}>Cancel</button>\r\n\r\n                :\r\n            \r\n                <> \r\n                    <select onClick={(e) => {\r\n                        setTime(e.target.options[e.target.selectedIndex].value)\r\n                    }}>                   \r\n                        <option>Select time</option>\r\n                        {\r\n                            props.times.map((item, i) => {\r\n                                return <option key={i} value={item.value}>{item.text}</option>\r\n                            })\r\n                        }  \r\n                    </select>\r\n            \r\n                    <button disabled={time === 'Select time' ? true : false} onClick={() => {\r\n                        setStartTimer(true)\r\n                        setFinishingTime(new Date())\r\n                    }}>Go</button>\r\n                </>\r\n            }\r\n\r\n            <button onClick={() => {\r\n                clearInterval(interval)\r\n                setRemoveTimer(true)\r\n            }}>Del</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css'\r\n\r\nexport default function App() {\r\n    const [amountTimers, setAmountTimers] = useState(4);\r\n    const [saveLocalTime, setSaveLocalTime] = useState({\r\n        COMM: [\r\n\r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n\r\n    const commTimes = [\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:01:00', value: 'COMM_00_01_00'}\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'}\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n    ]\r\n\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n\r\n        saveLocalTime[typeTimer].length ?\r\n            setSaveLocalTime((prev) => {\r\n                return {\r\n                    ...prev, \r\n                    [typeTimer]: [\r\n                        ...prev[typeTimer], {\r\n                            id: prev[typeTimer][prev[typeTimer].length - 1].id + 1,\r\n                            time: '00:00:00'\r\n                        }\r\n                    ],\r\n                }\r\n            })\r\n\r\n            :\r\n\r\n            setSaveLocalTime((prev) => {\r\n                return {\r\n                    ...prev, \r\n                    [typeTimer]: [\r\n                        ...prev[typeTimer], {\r\n                            id: 0,\r\n                            time: '00:00:00'\r\n                        }\r\n                    ],\r\n                }\r\n            })  \r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/*  COMM */}\r\n            <div className='containerTimer'>\r\n                <div className='containerCommissionTitle'>\r\n                    <p>COMMISSION</p>\r\n\r\n                    <div className='containerCommissionTitleAvailable'>\r\n                        <p>Available {amountTimers - saveLocalTime.COMM.length}</p>\r\n\r\n                        <label className='containerCommissionTitleEvent'>\r\n                            <p>Event</p>\r\n                            <input \r\n                                type='checkbox' \r\n                                onClick={(e) => {\r\n                                    setAmountTimers(e.target.checked ? 5 : 4)\r\n\r\n                                    {\r\n                                        saveLocalTime.COMM.length === 5 &&\r\n                                            setSaveLocalTime((prev) => {\r\n                                                return {\r\n                                                    ...prev, \r\n                                                    COMM: [\r\n                                                        ...prev.COMM.slice(0, -1)\r\n                                                    ],\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.COMM.length ? \r\n                            saveLocalTime.COMM.map((item, i) => {\r\n                                return <Timer \r\n                                    item={item} \r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    saveLocalTime={saveLocalTime} \r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    times={commTimes}\r\n                                    typeTimer={'COMM'}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.COMM.length !== amountTimers && \r\n                        <button \r\n                            name='COMM'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            {/* BOOK */}\r\n            <div className='containerTimer'>\r\n                <div className='containerTitle'>\r\n                    <p>CLASSROOM</p>\r\n                    <div>Available {4 - saveLocalTime.BOOK.length}</div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.BOOK.length ? \r\n                            saveLocalTime.BOOK.map((item, i) => {\r\n                                return <Timer \r\n                                    item={item} \r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    saveLocalTime={saveLocalTime} \r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    times={bookTimes}\r\n                                    typeTimer={'BOOK'} \r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.BOOK.length !== 4 && \r\n                        <button \r\n                            name='BOOK'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            {/* PROJ */}\r\n            <div className='containerTimer'>\r\n                <div className='containerTitle'>\r\n                    <p>LAB</p>\r\n                    <div>Available {1 - saveLocalTime.PROJ.length}</div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.PROJ.length ? \r\n                            saveLocalTime.PROJ.map((item, i) => {\r\n                                return <Timer \r\n                                    item={item} \r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    saveLocalTime={saveLocalTime} \r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    times={projTimes}\r\n                                    typeTimer={'PROJ'}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.PROJ.length !== 1 && \r\n                        <button \r\n                            name='PROJ'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}