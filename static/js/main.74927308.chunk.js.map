{"version":3,"sources":["music/soundNotify.mp3","img/icon/iconStartTimer.svg","img/icon/iconRemoveTimer.svg","img/icon/iconCancelTimer.svg","img/icon/iconCompleteTimer.svg","Timer.jsx","img/icon/iconAddTimer.svg","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","animationRemove","setAnimationRemove","time","setTime","isActive","startTimer","setStartTimer","Date","savedDate","finishingTime","setFinishingTime","hours","minutes","seconds","remainingTime","setRemainingTime","audio","Audio","soundNotify","showTitle","document","title","showIcon","interval","intervalNotify","removeTime","arrayTimes","JSON","parse","localStorage","getItem","setSaveLocalTime","prev","typeTimer","filter","item","id","USER_TIME","stringify","saveChanges","completedTime","finishTimer","timerFinish","useEffect","current","split","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","toJSON","String","padStart","setInterval","currentTime","countDownTime","getTime","clearInterval","volume","play","i","window","focus","head","children","attributes","value","tabBlinkeNotify","className","onClick","setTimeout","blur","src","iconCompleteTimer","iconRemoveTimer","onWheel","e","deltaY","target","options","selectedIndex","length","scrollHandler","onMouseEnter","querySelector","onwheel","preventDefault","onMouseLeave","collectionTimes","map","text","style","cursor","opacity","disabled","iconStartTimer","iconCancelTimer","App","COMM","BOOK","PROJ","saveLocalTime","commTimes","bookTimes","projTimes","setItem","name","push","iconAddTimer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.74927308.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/soundNotify.40c2f672.mp3\";","export default __webpack_public_path__ + \"static/media/iconStartTimer.20b99de3.svg\";","export default __webpack_public_path__ + \"static/media/iconRemoveTimer.3f8f7c62.svg\";","export default __webpack_public_path__ + \"static/media/iconCancelTimer.e56c4250.svg\";","export default __webpack_public_path__ + \"static/media/iconCompleteTimer.7af02aed.svg\";","import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport soundNotify from '../src/music/soundNotify.mp3';\r\n\r\n// icons\r\nimport iconStartTimer from './img/icon/iconStartTimer.svg';\r\nimport iconRemoveTimer from './img/icon/iconRemoveTimer.svg';\r\nimport iconCancelTimer from './img/icon/iconCancelTimer.svg';\r\nimport iconCompleteTimer from './img/icon/iconCompleteTimer.svg';\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef(false)\r\n    const [animationRemove, setAnimationRemove] = useState(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [startTimer, setStartTimer] = useState(props.isActive)\r\n    const [finishingTime, setFinishingTime] = useState(\r\n        props.isActive &&\r\n            new Date(props.time.savedDate)\r\n    )\r\n    const [remainingTime, setRemainingTime] = useState({\r\n        hours: '00', \r\n        minutes: '00', \r\n        seconds: '00'\r\n    })\r\n\r\n    const audio = new Audio(soundNotify)\r\n    const showTitle = ['Timer completed!', document.title]\r\n    const showIcon = ['/altimes/timer.ico', '/altimes/favicon.ico']\r\n    const zeroLength = 2\r\n    const interval = useRef()\r\n    const intervalNotify = useRef()\r\n\r\n    //* timer finishing sound notification\r\n    const tabSoundNotify = () => {\r\n        audio.volume = 0.3\r\n        audio.play()\r\n    }\r\n\r\n    //* \r\n    const tabBlinkeNotify = () => {\r\n        let i = 0\r\n\r\n        window.focus();\r\n    \r\n        intervalNotify.current = setInterval(() => {  \r\n            i++        \r\n            document.title = showTitle[i % 2]\r\n            document.head.children[1].attributes[1].value = showIcon[i % 2]\r\n        }, 1000);\r\n    }\r\n\r\n    //* scrollTimer\r\n    function stopScroll(elem){\r\n        elem.onwheel = (e) => {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    function resumeScroll(elem){\r\n        elem.onwheel = () => {}\r\n    }\r\n\r\n    const scrollHandler = (e) => {\r\n        if(e.deltaY < 0){\r\n            if(e.target.options.selectedIndex !== 0) {\r\n                e.target.options.selectedIndex--\r\n                setTime(e.target.options[e.target.selectedIndex].value)\r\n            }\r\n        } else if(e.deltaY > 0){\r\n            if(e.target.options.selectedIndex !== e.target.options.length - 1) {\r\n                e.target.options.selectedIndex++\r\n                setTime(e.target.options[e.target.selectedIndex].value)\r\n            }\r\n        }\r\n    }\r\n\r\n    //* remove timer\r\n    const removeTime = () => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [\r\n                    ...prev[props.typeTimer].filter(item => item.id !== props.time.id)\r\n                ]\r\n            }\r\n        })\r\n\r\n        arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(\r\n            item => item.id !== props.time.id\r\n        )\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    const saveChanges = (savedDate, completedTime, isActive, finishTimer) => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            let arrayTimes = [...prev[props.typeTimer]]\r\n            \r\n            arrayTimes[props.id] = {\r\n                id: props.id,\r\n                savedDate: savedDate,\r\n                completedTime: completedTime,\r\n                isActive: isActive,\r\n                timerFinish: finishTimer\r\n            }\r\n\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [...arrayTimes]\r\n            }\r\n        })\r\n        \r\n        arrayTimes[props.typeTimer][props.id] = ({\r\n            id: props.id,\r\n            savedDate: savedDate,\r\n            completedTime: completedTime,\r\n            isActive: isActive,\r\n            timerFinish: finishTimer\r\n        })\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n\r\n            saveChanges(\r\n                finishingTime.toJSON(),\r\n                `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                true,\r\n                false\r\n            )\r\n        } \r\n\r\n    }, [startTimer])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (startTimer) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                const countDownTime = new Date()\r\n\r\n                countDownTime.setHours(finishingTime.getHours() - currentTime.getHours())\r\n                countDownTime.setMinutes(finishingTime.getMinutes() - currentTime.getMinutes())\r\n                countDownTime.setSeconds(finishingTime.getSeconds() - currentTime.getSeconds())\r\n\r\n                if (finishingTime.getTime() - currentTime.getTime() > 0) {\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: countDownTime.getHours(),\r\n                            minutes: countDownTime.getMinutes(),\r\n                            seconds: countDownTime.getSeconds()\r\n                        }\r\n                    })\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n                    })\r\n                    saveChanges(\r\n                        null,\r\n                        `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                        false,\r\n                        true\r\n                    )\r\n\r\n                    tabSoundNotify()\r\n                    tabBlinkeNotify()\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    return (\r\n            <div className='wrapperTimerAnimation'>\r\n                <div className='timerСreateAnimation'></div>\r\n\r\n                <div className={`containerTimer ${animationRemove ? 'animationTimerRemove' : ''}`}> \r\n                    <div className='conteinerTimerStart'>\r\n                        {\r\n                            props.timerFinish &&\r\n                                <button className='completedTimerBtn' onClick={() => {\r\n                                    setTimeout(() => {\r\n                                        clearInterval(interval.current)\r\n                                        clearInterval(intervalNotify.current)\r\n                                        didMount.current = false\r\n                                        removeTime()\r\n                                        window.blur()\r\n                                        document.title = showTitle[1];\r\n                                        document.head.children[1].attributes[1].value = showIcon[1]\r\n                                    }, 390)\r\n\r\n                                    setAnimationRemove(true)\r\n                                }}>\r\n                                    <img \r\n                                        className='completedTimerBtnImg' \r\n                                        src={iconCompleteTimer} \r\n                                    />\r\n                                </button>\r\n                        }\r\n\r\n                        {\r\n                            !props.timerFinish && \r\n                                <button className='removeTimerBtn' onClick={() => {\r\n                                    setTimeout(() => {\r\n                                        clearInterval(interval.current)\r\n                                        didMount.current = false\r\n                                        removeTime()\r\n                                    }, 390)\r\n                                    \r\n                                    setAnimationRemove(true)\r\n                                }}>\r\n                                    <img \r\n                                        className='removeTimerBtnImg' \r\n                                        src={iconRemoveTimer} \r\n                                    />\r\n                                </button>\r\n                        }\r\n\r\n                        <div className='timer'>\r\n                            <p className='time'>{`\r\n                                ${String(remainingTime.hours).padStart(zeroLength, '0')}:${String(remainingTime.minutes).padStart(zeroLength, '0')}:${String(remainingTime.seconds).padStart(zeroLength, '0')}\r\n                            `}</p>\r\n                            \r\n                            <div className='containerCompletedTimerText'>\r\n                                <p className='completedTimerText'>Completed: </p>\r\n                                <p>{props.time.completedTime}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='containerTimerEnd'>\r\n                        { \r\n                            !props.timerFinish ?\r\n                                !startTimer ? \r\n                                    !props.isActive &&\r\n                                        <div className='containerTimerSelect'>\r\n                                            {/* select times */}   \r\n                                            <select \r\n                                                className='timerSelect'\r\n                                                onWheel={(e) => scrollHandler(e)}\r\n                                                onMouseEnter={() => stopScroll(document.querySelector('.container'))}\r\n                                                onMouseLeave={() => resumeScroll(document.querySelector('.container'))}\r\n                                                onClick={(e) => {\r\n                                                    if(e.target.options){\r\n                                                        setTime(e.target.options[e.target.selectedIndex].value)\r\n                                                        return\r\n                                                    }\r\n                                                    setTime(e.target.value)\r\n                                                }}\r\n                                            > \r\n\r\n                                                <option>Select time</option>\r\n                                                {\r\n                                                    props.collectionTimes.map((item, i) => {\r\n                                                        return <option key={i} value={item.value}>{item.text}</option>\r\n                                                    })\r\n                                                }  \r\n                                            </select>\r\n                                            \r\n                                            {/* start btn */}\r\n                                            <button \r\n                                                style={time === 'Select time' ? {cursor: 'not-allowed', opacity: '50%'} : {cursor: 'pointer'}}\r\n                                                className='startTimerBtn' \r\n                                                disabled={time === 'Select time' ? true : false} \r\n                                                onClick={() => {\r\n                                                    setFinishingTime(new Date())\r\n                                                    setStartTimer(true)\r\n                                                    didMount.current = true\r\n                                                }}\r\n                                            >\r\n                                                <img \r\n                                                    className='startTimerBtnBtnImg' \r\n                                                    src={iconStartTimer} \r\n                                                />\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                :\r\n\r\n                                <></>   \r\n\r\n                            :\r\n\r\n                            <></>\r\n                        }\r\n\r\n                        {\r\n                            props.isActive &&\r\n                                <button className='cancelTimerBtn' onClick={() => {\r\n                                    clearInterval(interval.current)\r\n                                    setStartTimer(false)\r\n                                    didMount.current = false\r\n                                    setTime('Select time')\r\n                                    setRemainingTime((prev) => {\r\n                                        return {\r\n                                            ...prev,\r\n                                            hours: '00',\r\n                                            minutes: '00',\r\n                                            seconds: '00'\r\n                                        }\r\n                                    })\r\n                                    saveChanges(null, '00:00:00', false, false)\r\n                                }}>\r\n                                    <img \r\n                                        className='cancelTimerBtnImg' \r\n                                        src={iconCancelTimer} \r\n                                    />\r\n                                </button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/iconAddTimer.7aa5c544.svg\";","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css';\r\nimport './style/font.css';\r\n\r\n//icon\r\nimport iconAddTimer from './img/icon/iconAddTimer.svg';\r\n\r\nexport default function App() {\r\n    const amountTimers = 4;\r\n    const [saveLocalTime, setSaveLocalTime] = useState({\r\n        COMM: [\r\n            \r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n\r\n    const commTimes = [\r\n        {text: '00:01:00', value: 'COMM_00_01_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},  \r\n    ]\r\n\r\n    // проверка и создание LC\r\n    if (!localStorage.getItem('USER_TIME')) {\r\n        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        if(arrayTimes.COMM.length || arrayTimes.BOOK.length || arrayTimes.PROJ.length) {\r\n            setSaveLocalTime(() => {return arrayTimes})\r\n        }\r\n    }, [0])\r\n\r\n    // создание таймера\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        // сохранение в хук созданного таймера\r\n        setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [typeTimer]: [\r\n                    ...prev[typeTimer], {\r\n                        id: prev[typeTimer].length ? \r\n                                prev[typeTimer][prev[typeTimer].length - 1].id + 1 : 0,\r\n                        savedDate: null,\r\n                        completedTime: '00:00:00',\r\n                        isActive: false,\r\n                        timerFinish: false\r\n                    }\r\n                ],\r\n            }\r\n        })\r\n\r\n        // сохранение в LC таймера\r\n        setSaveLocalTime((prev) => {\r\n            arrayTimes[typeTimer].push({\r\n                id: prev[typeTimer][prev[typeTimer].length - 1].id,\r\n                savedDate: null,\r\n                completedTime: '00:00:00',\r\n                isActive: false,\r\n                timerFinish: false\r\n            })\r\n    \r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n\r\n            return prev\r\n        })     \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='containerBgTitle'>\r\n                <p className='bgTitle'>ALTimes </p>\r\n                <p className='ver'>v. 0.1</p>\r\n            </div>\r\n\r\n            <div className='container'>\r\n                {/*  COMM */}\r\n                <fieldset className='containerTimers'>\r\n                    <legend className='containerTitle'>\r\n                        <p className='commissionTitle'>COMMISSION</p>\r\n                    </legend>\r\n                    \r\n                    <div className='wrapperTimer'>\r\n                        {\r\n                            saveLocalTime.COMM.length ? \r\n                                saveLocalTime.COMM.map((item, i) => { \r\n                                    return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={commTimes}\r\n                                    typeTimer={'COMM'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                    />\r\n                                })\r\n                            \r\n                                : \r\n                            \r\n                                <div className='availableTimerText'>Not found</div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {\r\n                        saveLocalTime.COMM.length !== amountTimers && \r\n                            <div className='containerAddTimerBtn'>\r\n                                <button \r\n                                    name='COMM'\r\n                                    className='addTimerBtn' \r\n                                    onClick={(e) => {setTime(e)}}\r\n                                >\r\n                                    <img\r\n                                        name='COMM'\r\n                                        className='addTimerBtnImg' \r\n                                        src={iconAddTimer} \r\n                                    />\r\n                                </button>\r\n                                \r\n                                <div className='containerTitleAvailable'>\r\n                                    <p className='titleAvailable'>Available:</p><p>{amountTimers - saveLocalTime.COMM.length}</p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </fieldset>\r\n\r\n                {/* BOOK */}\r\n                <fieldset className='containerTimers'>\r\n                    <legend className='containerTitle'>\r\n                        <p>CLASSROOM</p>\r\n                    </legend>\r\n                    \r\n                    <div className='wrapperTimer'>\r\n                        {\r\n                            saveLocalTime.BOOK.length ? \r\n                                saveLocalTime.BOOK.map((item, i) => {\r\n                                    return <Timer \r\n                                        time={item}\r\n                                        key={item.id}\r\n                                        id={i}\r\n                                        setSaveLocalTime={setSaveLocalTime}\r\n                                        collectionTimes={bookTimes}\r\n                                        typeTimer={'BOOK'}\r\n                                        isActive={item.isActive}\r\n                                        timerFinish={item.timerFinish}\r\n                                    />\r\n                                })\r\n                            \r\n                                : \r\n                            \r\n                                <div className='availableTimerText'>Not found</div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {\r\n                        saveLocalTime.BOOK.length !== 4 && \r\n                            <div className='containerAddTimerBtn'>\r\n                                <button \r\n                                    name='BOOK'\r\n                                    className='addTimerBtn' \r\n                                    onClick={(e) => {setTime(e)}}\r\n                                >\r\n                                    <img \r\n                                        name='BOOK'\r\n                                        className='addTimerBtnImg' \r\n                                        src={iconAddTimer} \r\n                                    />\r\n                                </button>\r\n\r\n                                <div className='containerTitleAvailable'>\r\n                                    <p className='titleAvailable'>Available:</p><p>{4 - saveLocalTime.BOOK.length}</p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </fieldset>\r\n\r\n                {/* PROJ */}\r\n                <fieldset className='containerTimers'>\r\n                    <legend className='containerTitle'>\r\n                        <p>LAB</p>\r\n                    </legend>\r\n                    \r\n                    <div className='wrapperTimer'>\r\n                        {\r\n                            saveLocalTime.PROJ.length ? \r\n                                saveLocalTime.PROJ.map((item, i) => {\r\n                                    return <Timer \r\n                                        time={item}\r\n                                        key={item.id}\r\n                                        id={i}\r\n                                        setSaveLocalTime={setSaveLocalTime}\r\n                                        collectionTimes={projTimes}\r\n                                        typeTimer={'PROJ'}\r\n                                        isActive={item.isActive}\r\n                                        timerFinish={item.timerFinish}\r\n                                    />\r\n                                })\r\n                            \r\n                                : \r\n                            \r\n                                <div className='availableTimerText'>Not found</div>\r\n                        }\r\n                    </div>\r\n                    \r\n                    {\r\n                        saveLocalTime.PROJ.length !== 1 &&\r\n                            <div className='containerAddTimerBtn'>\r\n                                <button \r\n                                    name='PROJ'\r\n                                    className='addTimerBtn' \r\n                                    onClick={(e) => {setTime(e)}}\r\n                                >\r\n                                    <img\r\n                                        name='PROJ'\r\n                                        className='addTimerBtnImg' \r\n                                        src={iconAddTimer} \r\n                                    />\r\n                                </button>\r\n\r\n                                <div className='containerTitleAvailable'>\r\n                                    <p className='titleAvailable'>Available:</p><p>{1 - saveLocalTime.PROJ.length}</p>\r\n                                </div>\r\n                            </div>\r\n                    }\r\n                </fieldset>\r\n\r\n                {/* <div>\r\n    \r\n                    <br/>\r\n                    <button onClick = {() => {\r\n                        localStorage.clear()\r\n                        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n                    }}\r\n                        \r\n                    >Update LC</button>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}