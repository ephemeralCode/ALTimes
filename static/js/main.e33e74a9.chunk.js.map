{"version":3,"sources":["Timer.jsx","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","time","setTime","startTimer","setStartTimer","isActive","setIsActive","Date","savedDate","finishingTime","setFinishingTime","hours","minutes","seconds","remainingTime","setRemainingTime","interval","removeTime","arrayTimes","JSON","parse","localStorage","getItem","setSaveLocalTime","prev","typeTimer","filter","item","id","USER_TIME","stringify","saveChanges","completedTime","finishTimer","timerFinish","useEffect","current","split","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","toJSON","String","padStart","setInterval","currentTime","countDownTime","getTime","clearInterval","className","onClick","e","target","options","selectedIndex","value","collectionTimes","map","i","text","disabled","App","COMM","BOOK","PROJ","saveLocalTime","commTimes","bookTimes","projTimes","setItem","name","length","push","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e33e74a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [startTimer, setStartTimer] = useState(false)\r\n    const [isActive, setIsActive] = useState(props.isActive)\r\n    const [finishingTime, setFinishingTime] = useState(\r\n        isActive &&\r\n            new Date(props.time.savedDate)\r\n    )\r\n    const [remainingTime, setRemainingTime] = useState({\r\n        hours: '00', \r\n        minutes: '00', \r\n        seconds: '00'\r\n    })\r\n\r\n    let zeroLength = 2;\r\n    let interval = useRef();\r\n\r\n    // const notificationFinishTimer = () => {\r\n    //     interval.current = setInterval(() => {\r\n\r\n    //         document.title = 'Timer complete!'\r\n    //     }, 1000 )\r\n    // }\r\n\r\n    //* remove timer\r\n    const removeTime = () => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [\r\n                    ...prev[props.typeTimer].filter(item => item.id !== props.time.id)\r\n                ]\r\n            }\r\n        })\r\n\r\n        arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(\r\n            item => item.id !== props.time.id\r\n        )\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    //\r\n    const saveChanges = (savedDate, completedTime, isActive, finishTimer) => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            let arrayTimes = [...prev[props.typeTimer]]\r\n            \r\n            arrayTimes[props.id] = {\r\n                id: props.id,\r\n                savedDate: savedDate,\r\n                completedTime: completedTime,\r\n                isActive: isActive,\r\n                timerFinish: finishTimer\r\n            }\r\n\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [...arrayTimes]\r\n            }\r\n        })\r\n        \r\n        arrayTimes[props.typeTimer][props.id] = ({\r\n            id: props.id,\r\n            savedDate: savedDate,\r\n            completedTime: completedTime,\r\n            isActive: isActive,\r\n            timerFinish: finishTimer\r\n        })\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n\r\n            saveChanges(\r\n                finishingTime.toJSON(),\r\n                `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                true,\r\n                false\r\n            )\r\n        } \r\n\r\n    }, [startTimer])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (isActive) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                let countDownTime = new Date()\r\n\r\n                countDownTime.setHours(finishingTime.getHours() - currentTime.getHours())\r\n                countDownTime.setMinutes(finishingTime.getMinutes() - currentTime.getMinutes())\r\n                countDownTime.setSeconds(finishingTime.getSeconds() - currentTime.getSeconds())\r\n\r\n                if (finishingTime.getTime() - currentTime.getTime() > 0) {\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: countDownTime.getHours(),\r\n                            minutes: countDownTime.getMinutes(),\r\n                            seconds: countDownTime.getSeconds()\r\n                        }\r\n                    })\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                    setIsActive(false)\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n                    })\r\n                    saveChanges(\r\n                        null,\r\n                        `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                        true,\r\n                        true\r\n                    )\r\n\r\n                    // notificationFinishTimer()\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n\r\n    return (\r\n        <div className='wrapperShowTimer'>\r\n            <div className='timer'>\r\n                {\r\n                    props.timerFinish &&\r\n                        <button className='completedTimerBtn' onClick={() => {\r\n                            clearInterval(interval.current)\r\n                            didMount.current = false\r\n                            setIsActive(false)\r\n                            removeTime()\r\n                        }}></button>\r\n                }\r\n\r\n                <div className='showTime'>\r\n                    <p className='time'>{`\r\n                        ${String(remainingTime.hours).padStart(zeroLength, '0')}:${String(remainingTime.minutes).padStart(zeroLength, '0')}:${String(remainingTime.seconds).padStart(zeroLength, '0')}\r\n                    `}</p>\r\n                    \r\n                    <span className='completedTimerText'>Completed: </span><span>{props.time.completedTime}</span>        \r\n                </div>\r\n            </div>\r\n\r\n            <div className='wrapperTimerBtn'>\r\n                { \r\n                    !props.timerFinish ?\r\n                        !startTimer ? \r\n                            !isActive &&\r\n                                <>   \r\n                                    <select className='wrapperTimerSelect' onClick={(e) => {\r\n                                        setTime(e.target.options[e.target.selectedIndex].value)\r\n                                    }}>                   \r\n                                        <option>Select time</option>\r\n                                        {\r\n                                            props.collectionTimes.map((item, i) => {\r\n                                                return <option key={i} value={item.value}>{item.text}</option>\r\n                                            })\r\n                                        }  \r\n                                    </select>\r\n\r\n                                    <button className='startTimerBtn' disabled={time === 'Select time' ? true : false} \r\n                                        onClick={() => {\r\n                                            setFinishingTime(new Date())\r\n                                            setIsActive(true)\r\n                                            setStartTimer(true)\r\n                                            didMount.current = true\r\n                                        }}\r\n                                    >Start</button>\r\n                                </>\r\n\r\n                        :\r\n\r\n                        <></>   \r\n\r\n                    :\r\n\r\n                    <></>\r\n                }\r\n\r\n                {\r\n                    isActive ?\r\n                        <button className='cancelTimerBtn' onClick={() => {\r\n                            clearInterval(interval.current)\r\n                            setStartTimer(false)\r\n                            didMount.current = false\r\n                            setIsActive(false)\r\n                            setTime('Select time')\r\n                            setRemainingTime((prev) => {\r\n                                return {\r\n                                    ...prev,\r\n                                    hours: '00',\r\n                                    minutes: '00',\r\n                                    seconds: '00'\r\n                                }\r\n                            })\r\n                            saveChanges(null, '00:00:00', false, false)\r\n                        }}>Cancel</button>\r\n                    \r\n                    :\r\n\r\n                    <></>\r\n                }\r\n\r\n                {\r\n                    !props.timerFinish && \r\n                        <button className='removeTimerBtn' onClick={() => {\r\n                            clearInterval(interval.current)\r\n                            didMount.current = false\r\n                            setIsActive(false)\r\n                            removeTime()\r\n                        }}>Remove</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css'\r\n\r\nexport default function App() {\r\n    const amountTimers = 4;\r\n    const [saveLocalTime, setSaveLocalTime] = useState({\r\n        COMM: [\r\n            \r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n\r\n    const commTimes = [\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:05:00', value: 'COMM_00_05_00'},\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'}\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n    ]\r\n\r\n    // проверка и создание LC\r\n    if (!localStorage.getItem('USER_TIME')) {\r\n        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n    }\r\n\r\n    // создание таймера\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        // сохранение в хук созданного таймера\r\n        setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [typeTimer]: [\r\n                    ...prev[typeTimer], {\r\n                        id: prev[typeTimer].length ? \r\n                                prev[typeTimer][prev[typeTimer].length - 1].id + 1 : 0,\r\n                        savedDate: null,\r\n                        completedTime: '00:00:00',\r\n                        isActive: false,\r\n                        timerFinish: false\r\n                    }\r\n                ],\r\n            }\r\n        })\r\n\r\n        // сохранение в LC таймера\r\n        setSaveLocalTime((prev) => {\r\n            arrayTimes[typeTimer].push({\r\n                id: prev[typeTimer][prev[typeTimer].length - 1].id,\r\n                savedDate: null,\r\n                completedTime: '00:00:00',\r\n                isActive: false,\r\n                timerFinish: false\r\n            })\r\n    \r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n\r\n            return prev\r\n        })     \r\n    }\r\n\r\n    useEffect(() => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        if(arrayTimes.COMM.length || arrayTimes.BOOK.length || arrayTimes.PROJ.length) {\r\n            setSaveLocalTime(() => {return arrayTimes})\r\n        }\r\n    }, [0])\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/*  COMM */}\r\n            <fieldset className='containerTimer'>\r\n                <legend className='containerTitle'>\r\n                    <p className='commissionTitle'>COMMISSION</p>\r\n\r\n                    {/* <div className='containerCommissionTitleAvailable'>\r\n                        <p>Available {amountTimers - saveLocalTime.COMM.length}</p>\r\n                    </div> */}\r\n                </legend>\r\n                \r\n                <div className='wrapperTimer'>\r\n                    {\r\n                        saveLocalTime.COMM.length ? \r\n                            saveLocalTime.COMM.map((item, i) => { \r\n                                return <Timer \r\n                                   time={item}\r\n                                   key={item.id}\r\n                                   id={i}\r\n                                   setSaveLocalTime={setSaveLocalTime}\r\n                                   collectionTimes={commTimes}\r\n                                   typeTimer={'COMM'}\r\n                                   isActive={item.isActive}\r\n                                   timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.COMM.length !== amountTimers && \r\n                        <button \r\n                            name='COMM'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </fieldset>\r\n\r\n            {/* BOOK */}\r\n            <fieldset className='containerTimer'>\r\n                <legend className='containerTitle'>\r\n                    <p>CLASSROOM</p>\r\n\r\n                    {/* <div>Available {4 - saveLocalTime.BOOK.length}</div> */}\r\n                </legend>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.BOOK.length ? \r\n                            saveLocalTime.BOOK.map((item, i) => {\r\n                                return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={bookTimes}\r\n                                    typeTimer={'BOOK'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.BOOK.length !== 4 && \r\n                        <button \r\n                            name='BOOK'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </fieldset>\r\n\r\n            {/* PROJ */}\r\n            <fieldset className='containerTimer'>\r\n                <legend className='containerTitle'>\r\n                    <p>LAB</p>\r\n\r\n                    {/* <div>Available {1 - saveLocalTime.PROJ.length}</div> */}\r\n                </legend>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.PROJ.length ? \r\n                            saveLocalTime.PROJ.map((item, i) => {\r\n                                return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={projTimes}\r\n                                    typeTimer={'PROJ'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.PROJ.length !== 1 && \r\n                        <button \r\n                            name='PROJ'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </fieldset>\r\n\r\n            <div>\r\n                {/* //!TODO */}\r\n                <br/>\r\n                <button onClick = {() => {\r\n                    localStorage.clear()\r\n                    localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n                }}\r\n                    \r\n                >Update LC</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}