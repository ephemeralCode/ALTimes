{"version":3,"sources":["Timer.jsx","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","time","setTime","startTimer","setStartTimer","isActive","setIsActive","Date","finishingTime","setFinishingTime","hours","minutes","seconds","remainingTime","setRemainingTime","interval","removeTime","arrayTimes","JSON","parse","localStorage","getItem","setSaveLocalTime","prev","typeTimer","filter","item","id","USER_TIME","stringify","saveChanges","completedTime","finishTimer","timerFinish","useEffect","console","log","current","split","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","String","padStart","setInterval","currentTime","countDownTime","getTime","clearInterval","className","onClick","e","target","options","selectedIndex","value","collectionTimes","map","i","text","disabled","App","amountTimers","COMM","BOOK","PROJ","saveLocalTime","commTimes","setItem","name","length","push","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef361657.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [startTimer, setStartTimer] = useState(false)\r\n    const [isActive, setIsActive] = useState(props.isActive)\r\n    const [finishingTime, setFinishingTime] = useState(\r\n        props.isActive && new Date()\r\n    )\r\n    const [remainingTime, setRemainingTime] = useState({\r\n        hours: '00', \r\n        minutes: '00', \r\n        seconds: '00'\r\n    })\r\n\r\n    let zeroLength = 2;\r\n    let interval = useRef();\r\n\r\n    //* remove timer\r\n    const removeTime = () => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [\r\n                    ...prev[props.typeTimer].filter(item => item.id !== props.time.id)\r\n                ]\r\n            }\r\n        })\r\n\r\n        arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(\r\n            item => item.id !== props.time.id\r\n        )\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    const saveChanges = (completedTime, isActive, finishTimer) => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            let arrayTimes = [...prev[props.typeTimer]]\r\n            \r\n            arrayTimes[props.id] = {\r\n                id: props.id,\r\n                completedTime: completedTime,\r\n                isActive: isActive,\r\n                timerFinish: finishTimer\r\n            }\r\n\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [...arrayTimes]\r\n            }\r\n        })\r\n        \r\n        arrayTimes[props.typeTimer][props.id] = ({\r\n            id: props.id,\r\n            completedTime: completedTime,\r\n            isActive: isActive,\r\n            timerFinish: finishTimer\r\n        })\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(startTimer)\r\n        console.log(didMount.current)\r\n        \r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n\r\n            saveChanges(\r\n                `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:\r\n                ${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:\r\n                ${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                true,\r\n                false\r\n            )\r\n        } \r\n\r\n    }, [startTimer])\r\n\r\n     //* localStorageOn\r\n    useEffect(() => {\r\n        if(isActive) {\r\n            let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))[props.typeTimer][props.id].completedTime\r\n            const [hours, minutes, seconds] = arrayTimes.split(':')\r\n\r\n            setFinishingTime(finishingTime.setHours(hours))\r\n            setFinishingTime(finishingTime.setMinutes(minutes))\r\n            setFinishingTime(finishingTime.setSeconds(seconds))\r\n\r\n            didMount.current = true \r\n        }\r\n    }, [])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                let countDownTime = new Date()\r\n\r\n                countDownTime.setHours(finishingTime.getHours() - currentTime.getHours())\r\n                countDownTime.setMinutes(finishingTime.getMinutes() - currentTime.getMinutes())\r\n                countDownTime.setSeconds(finishingTime.getSeconds() - currentTime.getSeconds())\r\n\r\n                //! GMT fix\r\n                // countDownTime.setHours(countDownTime.getHours() + currentTime.getTimezoneOffset() / 60)\r\n\r\n                if (finishingTime.getTime() - currentTime.getTime() > 0) {\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: countDownTime.getHours(),\r\n                            minutes: countDownTime.getMinutes(),\r\n                            seconds: countDownTime.getSeconds()\r\n                        }\r\n                    })\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                    setIsActive(false)\r\n\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n                    })\r\n\r\n                    saveChanges(\r\n                        `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:\r\n                        ${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:\r\n                        ${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                        true,\r\n                        true\r\n                    )\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    return (\r\n        <div className='timer'>\r\n            {\r\n                props.timerFinish &&\r\n                    <button onClick={() => {\r\n                        clearInterval(interval.current)\r\n                        didMount.current = false\r\n                        setIsActive(false)\r\n                        removeTime()\r\n                    }}>V</button>\r\n            }\r\n\r\n            <div className='showTime'>\r\n                <h2 className='time'>{`\r\n                    ${String(remainingTime.hours).padStart(zeroLength, '0')}:\r\n                    ${String(remainingTime.minutes).padStart(zeroLength, '0')}:\r\n                    ${String(remainingTime.seconds).padStart(zeroLength, '0')}\r\n                `}</h2>\r\n                \r\n                <p>Completed: {\r\n                    props.time.completedTime\r\n                }</p>\r\n            </div>\r\n            \r\n            { \r\n                !props.timerFinish ?\r\n                    !startTimer ? \r\n                        !isActive &&\r\n                            <>   \r\n                                <select onClick={(e) => {\r\n                                    setTime(e.target.options[e.target.selectedIndex].value)\r\n                                }}>                   \r\n                                    <option>Select time</option>\r\n                                    {\r\n                                        props.collectionTimes.map((item, i) => {\r\n                                            return <option key={i} value={item.value}>{item.text}</option>\r\n                                        })\r\n                                    }  \r\n                                </select>\r\n\r\n                                <button disabled={time === 'Select time' ? true : false} \r\n                                    onClick={() => {\r\n                                        setFinishingTime(new Date())\r\n                                        setIsActive(true)\r\n                                        setStartTimer(true)\r\n                                        didMount.current = true\r\n                                    }}\r\n                                >Go</button>\r\n                            </>\r\n\r\n                    :\r\n\r\n                    <></>   \r\n\r\n                :\r\n\r\n                <></>\r\n            }\r\n\r\n            {\r\n                isActive ?\r\n                    <button onClick={() => {\r\n                        clearInterval(interval.current)\r\n                        setStartTimer(false)\r\n                        didMount.current = false\r\n                        setIsActive(false)\r\n                        setTime('Select time')\r\n                        setRemainingTime((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                hours: '00',\r\n                                minutes: '00',\r\n                                seconds: '00'\r\n                            }\r\n                        })\r\n                        saveChanges('00:00:00', false, false)\r\n                    }}>Cancel</button>\r\n                \r\n                :\r\n\r\n                <></>\r\n            }\r\n\r\n            {\r\n                !props.timerFinish && \r\n                    <button onClick={() => {\r\n                        clearInterval(interval.current)\r\n                        didMount.current = false\r\n                        setIsActive(false)\r\n                        removeTime()\r\n                    }}>Del</button>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css'\r\n\r\nexport default function App() {\r\n    const [amountTimers, setAmountTimers] = useState(4);\r\n    const [saveLocalTime, setSaveLocalTime] = useState({\r\n        COMM: [\r\n            \r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n\r\n    const commTimes = [\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:01:00', value: 'COMM_00_01_00'},\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'}\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n    ]\r\n\r\n    // проверка и создание LC\r\n    if (!localStorage.getItem('USER_TIME')) {\r\n        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n    }\r\n\r\n    // создание таймера\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        // сохранение в хук созданного таймера\r\n        setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [typeTimer]: [\r\n                    ...prev[typeTimer], {\r\n                        id: prev[typeTimer].length ? \r\n                                prev[typeTimer][prev[typeTimer].length - 1].id + 1 : 0,\r\n                        completedTime: '00:00:00',\r\n                        isActive: false,\r\n                        timerFinish: false\r\n                    }\r\n                ],\r\n            }\r\n        })\r\n\r\n        // сохранение в LC таймера\r\n        setSaveLocalTime((prev) => {\r\n            arrayTimes[typeTimer].push({\r\n                id: prev[typeTimer][prev[typeTimer].length - 1].id,\r\n                completedTime: '00:00:00',\r\n                isActive: false,\r\n                timerFinish: false\r\n            })\r\n    \r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n\r\n            return prev\r\n        })     \r\n    }\r\n\r\n    useEffect(() => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        if(arrayTimes.COMM.length || arrayTimes.BOOK.length || arrayTimes.PROJ.length) {\r\n            setSaveLocalTime(() => {return arrayTimes})\r\n        }\r\n    }, [0])\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/*  COMM */}\r\n            <div className='containerTimer'>\r\n                <div className='containerCommissionTitle'>\r\n                    <p>COMMISSION</p>\r\n\r\n                    <div className='containerCommissionTitleAvailable'>\r\n                        <p>Available {amountTimers - saveLocalTime.COMM.length}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.COMM.length ? \r\n                            saveLocalTime.COMM.map((item, i) => { \r\n                                console.log(item.isActive)\r\n                                return <Timer \r\n                                   time={item}\r\n                                   key={item.id}\r\n                                   id={i}\r\n                                   setSaveLocalTime={setSaveLocalTime}\r\n                                   collectionTimes={commTimes}\r\n                                   typeTimer={'COMM'}\r\n                                   isActive={item.isActive}\r\n                                   timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.COMM.length !== amountTimers && \r\n                        <button \r\n                            name='COMM'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n                        {/* BOOK */}\r\n                        <div className='containerTimer'>\r\n                <div className='containerTitle'>\r\n                    <p>CLASSROOM</p>\r\n                    <div>Available {4 - saveLocalTime.BOOK.length}</div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.BOOK.length ? \r\n                            saveLocalTime.BOOK.map((item, i) => {\r\n                                return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={commTimes}\r\n                                    typeTimer={'BOOK'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.BOOK.length !== 4 && \r\n                        <button \r\n                            name='BOOK'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            {/* PROJ */}\r\n            <div className='containerTimer'>\r\n                <div className='containerTitle'>\r\n                    <p>LAB</p>\r\n                    <div>Available {1 - saveLocalTime.PROJ.length}</div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        saveLocalTime.PROJ.length ? \r\n                            saveLocalTime.PROJ.map((item, i) => {\r\n                                return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={commTimes}\r\n                                    typeTimer={'PROJ'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.PROJ.length !== 1 && \r\n                        <button \r\n                            name='PROJ'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                {/* //!TODO */}\r\n                <br/>\r\n                <button onClick = {() => {\r\n                    localStorage.clear()\r\n                    localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n                }}\r\n                    \r\n                >Update LC</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}