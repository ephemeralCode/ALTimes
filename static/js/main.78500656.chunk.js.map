{"version":3,"sources":["Timer.jsx","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","time","setTime","isActive","startTimer","setStartTimer","Date","savedDate","finishingTime","setFinishingTime","hours","minutes","seconds","remainingTime","setRemainingTime","interval","removeTime","arrayTimes","JSON","parse","localStorage","getItem","setSaveLocalTime","prev","typeTimer","filter","item","id","USER_TIME","stringify","saveChanges","completedTime","finishTimer","timerFinish","useEffect","current","split","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","console","log","toJSON","String","padStart","setInterval","currentTime","countDownTime","getTime","clearInterval","className","onClick","e","target","options","selectedIndex","value","collectionTimes","map","i","text","style","cursor","opacity","disabled","App","COMM","BOOK","PROJ","saveLocalTime","commTimes","bookTimes","projTimes","setItem","length","name","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78500656.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [startTimer, setStartTimer] = useState(props.isActive)\r\n    const [finishingTime, setFinishingTime] = useState(\r\n        props.isActive &&\r\n            new Date(props.time.savedDate)\r\n    )\r\n    const [remainingTime, setRemainingTime] = useState({\r\n        hours: '00', \r\n        minutes: '00', \r\n        seconds: '00'\r\n    })\r\n\r\n    const zeroLength = 2;\r\n    const interval = useRef();\r\n\r\n    //* remove timer\r\n    const removeTime = () => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [\r\n                    ...prev[props.typeTimer].filter(item => item.id !== props.time.id)\r\n                ]\r\n            }\r\n        })\r\n\r\n        arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(\r\n            item => item.id !== props.time.id\r\n        )\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    const saveChanges = (savedDate, completedTime, isActive, finishTimer) => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        props.setSaveLocalTime((prev) => {\r\n            let arrayTimes = [...prev[props.typeTimer]]\r\n            \r\n            arrayTimes[props.id] = {\r\n                id: props.id,\r\n                savedDate: savedDate,\r\n                completedTime: completedTime,\r\n                isActive: isActive,\r\n                timerFinish: finishTimer\r\n            }\r\n\r\n            return {\r\n                ...prev, \r\n                [props.typeTimer]: [...arrayTimes]\r\n            }\r\n        })\r\n        \r\n        arrayTimes[props.typeTimer][props.id] = ({\r\n            id: props.id,\r\n            savedDate: savedDate,\r\n            completedTime: completedTime,\r\n            isActive: isActive,\r\n            timerFinish: finishTimer\r\n        })\r\n\r\n        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n\r\n            console.log(finishingTime)\r\n\r\n            saveChanges(\r\n                finishingTime.toJSON(),\r\n                `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                true,\r\n                false\r\n            )\r\n        } \r\n\r\n    }, [startTimer])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (startTimer) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                const countDownTime = new Date()\r\n\r\n                countDownTime.setHours(finishingTime.getHours() - currentTime.getHours())\r\n                countDownTime.setMinutes(finishingTime.getMinutes() - currentTime.getMinutes())\r\n                countDownTime.setSeconds(finishingTime.getSeconds() - currentTime.getSeconds())\r\n\r\n                if (finishingTime.getTime() - currentTime.getTime() > 0) {\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: countDownTime.getHours(),\r\n                            minutes: countDownTime.getMinutes(),\r\n                            seconds: countDownTime.getSeconds()\r\n                        }\r\n                    })\r\n                } else {\r\n                    clearInterval(interval.current)\r\n                    setRemainingTime((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n                    })\r\n                    saveChanges(\r\n                        null,\r\n                        `${String(finishingTime.getHours()).padStart(zeroLength, '0')}:${String(finishingTime.getMinutes()).padStart(zeroLength, '0')}:${String(finishingTime.getSeconds()).padStart(zeroLength, '0')}`,\r\n                        false,\r\n                        true\r\n                    )\r\n\r\n                    //TODO tabTitleNotify()\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    return (\r\n            <div className='containerTimer'>\r\n                <div className='conteinerTimerStart'>\r\n                    {\r\n                        props.timerFinish &&\r\n                            <button className='completedTimerBtn' onClick={() => {\r\n                                clearInterval(interval.current)\r\n                                didMount.current = false\r\n                                removeTime()\r\n                            }}></button>\r\n                    }\r\n\r\n                    {\r\n                        !props.timerFinish && \r\n                            <button className='removeTimerBtn' onClick={() => {\r\n                                clearInterval(interval.current)\r\n                                didMount.current = false\r\n                                removeTime()\r\n                            }}></button>\r\n                    }\r\n\r\n                    <div className='timer'>\r\n                        <p className='time'>{`\r\n                            ${String(remainingTime.hours).padStart(zeroLength, '0')}:${String(remainingTime.minutes).padStart(zeroLength, '0')}:${String(remainingTime.seconds).padStart(zeroLength, '0')}\r\n                        `}</p>\r\n                        \r\n                        <div className='containerCompletedTimerText'>\r\n                            <p className='completedTimerText'>Completed: </p>\r\n                            <p>{props.time.completedTime}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='containerTimerEnd'>\r\n                    { \r\n                        !props.timerFinish ?\r\n                            !startTimer ? \r\n                                !props.isActive &&\r\n                                    <div className='containerTimerSelect'>\r\n                                        {/* select input */}   \r\n                                        <select className='timerSelect' onClick={(e) => {\r\n                                            setTime(e.target.options[e.target.selectedIndex].value)\r\n                                        }}>                   \r\n                                            <option>Select time</option>\r\n                                            {\r\n                                                props.collectionTimes.map((item, i) => {\r\n                                                    return <option key={i} value={item.value}>{item.text}</option>\r\n                                                })\r\n                                            }  \r\n                                        </select>\r\n                                        \r\n                                        {/* start btn */}\r\n                                        <button \r\n                                            style={time === 'Select time' ? {cursor: 'not-allowed', opacity: '50%'} : {cursor: 'pointer'}}\r\n                                            className='startTimerBtn' \r\n                                            disabled={time === 'Select time' ? true : false} \r\n                                            onClick={() => {\r\n                                                setFinishingTime(new Date())\r\n                                                setStartTimer(true)\r\n                                                didMount.current = true\r\n                                            }}\r\n                                        ></button>\r\n                                    </div>\r\n\r\n                            :\r\n\r\n                            <></>   \r\n\r\n                        :\r\n\r\n                        <></>\r\n                    }\r\n\r\n                    {\r\n                        props.isActive ?\r\n                            <button className='cancelTimerBtn' onClick={() => {\r\n                                clearInterval(interval.current)\r\n                                setStartTimer(false)\r\n                                didMount.current = false\r\n                                setTime('Select time')\r\n                                setRemainingTime((prev) => {\r\n                                    return {\r\n                                        ...prev,\r\n                                        hours: '00',\r\n                                        minutes: '00',\r\n                                        seconds: '00'\r\n                                    }\r\n                                })\r\n                                saveChanges(null, '00:00:00', false, false)\r\n                            }}></button>\r\n                        \r\n                        :\r\n\r\n                        <></>\r\n                    }\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css';\r\nimport './style/font.css';\r\n\r\nexport default function App() {\r\n    const amountTimers = 4;\r\n    const [saveLocalTime, setSaveLocalTime] = useState({\r\n        COMM: [\r\n            \r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n\r\n    const commTimes = [\r\n        {text: '00:01:00', value: 'COMM_00_01_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},  \r\n    ]\r\n\r\n    // проверка и создание LC\r\n    if (!localStorage.getItem('USER_TIME')) {\r\n        localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n    }\r\n\r\n    useEffect(() => {\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        if(arrayTimes.COMM.length || arrayTimes.BOOK.length || arrayTimes.PROJ.length) {\r\n            setSaveLocalTime(() => {return arrayTimes})\r\n        }\r\n    }, [0])\r\n\r\n    // создание таймера\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n        // сохранение в хук созданного таймера\r\n        setSaveLocalTime((prev) => {\r\n            return {\r\n                ...prev, \r\n                [typeTimer]: [\r\n                    ...prev[typeTimer], {\r\n                        id: prev[typeTimer].length ? \r\n                                prev[typeTimer][prev[typeTimer].length - 1].id + 1 : 0,\r\n                        savedDate: null,\r\n                        completedTime: '00:00:00',\r\n                        isActive: false,\r\n                        timerFinish: false\r\n                    }\r\n                ],\r\n            }\r\n        })\r\n\r\n        // сохранение в LC таймера\r\n        setSaveLocalTime((prev) => {\r\n            arrayTimes[typeTimer].push({\r\n                id: prev[typeTimer][prev[typeTimer].length - 1].id,\r\n                savedDate: null,\r\n                completedTime: '00:00:00',\r\n                isActive: false,\r\n                timerFinish: false\r\n            })\r\n    \r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n\r\n            return prev\r\n        })     \r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/*  COMM */}\r\n            <fieldset className='containerTimers'>\r\n                <legend className='containerTitle'>\r\n                    <p className='commissionTitle'>COMMISSION</p>\r\n                </legend>\r\n                \r\n                <div className='wrapperTimer'>\r\n                    {\r\n                        saveLocalTime.COMM.length ? \r\n                            saveLocalTime.COMM.map((item, i) => { \r\n                                return <Timer \r\n                                   time={item}\r\n                                   key={item.id}\r\n                                   id={i}\r\n                                   setSaveLocalTime={setSaveLocalTime}\r\n                                   collectionTimes={commTimes}\r\n                                   typeTimer={'COMM'}\r\n                                   isActive={item.isActive}\r\n                                   timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimerText'>Not found</div>\r\n                    }\r\n                </div>\r\n\r\n                <div className='containerTitleAvailable'>\r\n                    <p className='titleAvailable'>Available:</p><p>{amountTimers - saveLocalTime.COMM.length}</p>\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.COMM.length !== amountTimers && \r\n                        <button \r\n                            name='COMM'\r\n                            className='addTimerBtn' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        ></button>\r\n                }\r\n            </fieldset>\r\n\r\n            {/* BOOK */}\r\n            <fieldset className='containerTimers'>\r\n                <legend className='containerTitle'>\r\n                    <p>CLASSROOM</p>\r\n                </legend>\r\n                \r\n                <div className='wrapperTimer'>\r\n                    {\r\n                        saveLocalTime.BOOK.length ? \r\n                            saveLocalTime.BOOK.map((item, i) => {\r\n                                return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={bookTimes}\r\n                                    typeTimer={'BOOK'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimerText'>Not found</div>\r\n                    }\r\n                </div>\r\n\r\n                <div className='containerTitleAvailable'>\r\n                    <p className='titleAvailable'>Available:</p><p>{4 - saveLocalTime.BOOK.length}</p>\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.BOOK.length !== 4 && \r\n                        <button \r\n                            name='BOOK'\r\n                            className='addTimerBtn' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        ></button>\r\n                }\r\n            </fieldset>\r\n\r\n            {/* PROJ */}\r\n            <fieldset className='containerTimers'>\r\n                <legend className='containerTitle'>\r\n                    <p>LAB</p>\r\n                </legend>\r\n                \r\n                <div className='wrapperTimer'>\r\n                    {\r\n                        saveLocalTime.PROJ.length ? \r\n                            saveLocalTime.PROJ.map((item, i) => {\r\n                                return <Timer \r\n                                    time={item}\r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    setSaveLocalTime={setSaveLocalTime}\r\n                                    collectionTimes={projTimes}\r\n                                    typeTimer={'PROJ'}\r\n                                    isActive={item.isActive}\r\n                                    timerFinish={item.timerFinish}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimerText'>Not found</div>\r\n                    }\r\n                </div>\r\n\r\n                <div className='containerTitleAvailable'>\r\n                    <p className='titleAvailable'>Available:</p><p>{1 - saveLocalTime.PROJ.length}</p>\r\n                </div>\r\n                \r\n                {\r\n                    saveLocalTime.PROJ.length !== 1 && \r\n                        <button \r\n                            name='PROJ'\r\n                            className='addTimerBtn' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        ></button>\r\n                }\r\n            </fieldset>\r\n\r\n            {/* <div>\r\n \r\n                <br/>\r\n                <button onClick = {() => {\r\n                    localStorage.clear()\r\n                    localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n                }}\r\n                    \r\n                >Update LC</button>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}