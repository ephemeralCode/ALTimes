{"version":3,"sources":["Timer.jsx","App.jsx","index.js"],"names":["Timer","props","didMount","useRef","useState","startTimer","setStartTimer","removeTimer","setRemoveTimer","time","setTime","saveLocalTime","Date","finishingTime","setFinishingTime","interval","useEffect","current","arrayTimes","JSON","parse","localStorage","getItem","setCompletedTime","prev","typeTimer","filter","item","id","USER_TIME","stringify","split","hours","minutes","seconds","setHours","getHours","Number","setMinutes","getMinutes","setSeconds","getSeconds","push","completedTime","console","log","setInterval","currentTime","countDownTime","getTime","clearInterval","className","String","padStart","onClick","e","target","options","selectedIndex","value","times","map","i","text","disabled","App","amountTimers","setAmountTimers","COMM","BOOK","PROJ","setUseLC","commTimes","bookTimes","projTimes","name","length","setItem","type","checked","slice","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff110046.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport function Timer(props) {\r\n    const didMount = useRef()\r\n    const [startTimer, setStartTimer] = useState(false)\r\n    const [removeTimer, setRemoveTimer] = useState(false)\r\n    const [time, setTime] = useState('Select time')\r\n    const [finishingTime, setFinishingTime] = useState(\r\n        props.saveLocalTime && new Date()\r\n    )\r\n\r\n    const [test, setTest] = useState(new Date())\r\n    let zeroLength = 2;\r\n    let interval = useRef();\r\n\r\n    //* remove timer\r\n    useEffect(() => {\r\n        if(didMount.current) {\r\n            let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n            props.setCompletedTime((prev) => {\r\n                return {\r\n                    ...prev, \r\n                    [props.typeTimer]: [\r\n                        ...prev[props.typeTimer].filter(item => item.id !== props.item.id)\r\n                    ]\r\n                }\r\n            })\r\n\r\n            arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(item => item.id !== props.item.id)\r\n            \r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n            \r\n            didMount.current = false\r\n            setRemoveTimer(false)\r\n        } \r\n        \r\n    }, [removeTimer])\r\n\r\n    //* setFinishingTime\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            const [id, hours, minutes, seconds] = time.split('_')\r\n            let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n            setFinishingTime(finishingTime.setHours(finishingTime.getHours() + Number(hours)))\r\n            setFinishingTime(finishingTime.setMinutes(finishingTime.getMinutes() + Number(minutes)))\r\n            setFinishingTime(finishingTime.setSeconds(finishingTime.getSeconds() + Number(seconds)))\r\n\r\n            arrayTimes[props.typeTimer].push({\r\n                id: props.id,\r\n                hours: '00',\r\n                minutes: '00',\r\n                seconds: '00',\r\n                completedTime: `${finishingTime.getHours()}:${finishingTime.getMinutes()}:${finishingTime.getSeconds()}`\r\n            })\r\n\r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    //* localStorageOn\r\n    useEffect(() => {\r\n        if(props.saveLocalTime) {\r\n            let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))[props.typeTimer][props.id].completedTime\r\n            const [hours, minutes, seconds] = arrayTimes.split(':')\r\n\r\n            setFinishingTime(finishingTime.setHours(hours))\r\n            setFinishingTime(finishingTime.setMinutes(minutes))\r\n            setFinishingTime(finishingTime.setSeconds(seconds))\r\n\r\n            console.log(finishingTime)\r\n\r\n            didMount.current = true \r\n        }\r\n    }, [])\r\n\r\n    //* TimerOn/Off\r\n    useEffect(() => {\r\n        if (didMount.current) {\r\n            interval.current = setInterval(() => {\r\n                const currentTime = new Date()\r\n                let countDownTime = new Date()\r\n\r\n                countDownTime.setHours(finishingTime.getHours() - currentTime.getHours())\r\n                countDownTime.setMinutes(finishingTime.getMinutes() - currentTime.getMinutes())\r\n                countDownTime.setSeconds(finishingTime.getSeconds() - currentTime.getSeconds())\r\n\r\n                //! GMT fix\r\n                // countDownTime.setHours(countDownTime.getHours() + currentTime.getTimezoneOffset() / 60)\r\n\r\n                if (finishingTime.getTime() - currentTime.getTime() > 0) {\r\n                    props.setCompletedTime((prev) => {\r\n                        let arrayTimes = [...prev[props.typeTimer]]\r\n\r\n                        arrayTimes[props.id] = {\r\n                            id: props.id,\r\n                            hours: countDownTime.getHours(),\r\n                            minutes: countDownTime.getMinutes(),\r\n                            seconds: countDownTime.getSeconds(),\r\n                        }\r\n\r\n                        return {\r\n                            ...prev, \r\n                            [props.typeTimer]: [...arrayTimes]\r\n                        }\r\n                    })\r\n                } else {\r\n                    props.setCompletedTime((prev) => {\r\n                        let arrayTimes = [...prev[props.typeTimer]]\r\n\r\n                        arrayTimes[props.id] = {\r\n                            id: props.id,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n\r\n                        return {\r\n                            ...prev, \r\n                            [props.typeTimer]: [...arrayTimes]\r\n                        }\r\n                    })\r\n\r\n                    clearInterval(interval.current)\r\n                }\r\n            }, 1000)\r\n\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n        \r\n        return () => {\r\n            clearInterval(interval.current)\r\n\r\n            let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n                        \r\n            arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(item => item.id !== props.item.id)\r\n            localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n        }\r\n\r\n    }, [startTimer])\r\n\r\n    return (\r\n        <div className='timer'>\r\n            <h2>{`\r\n                ${String(props.item.hours).padStart(zeroLength, '0')}:\r\n                ${String(props.item.minutes).padStart(zeroLength, '0')}:\r\n                ${String(props.item.seconds).padStart(zeroLength, '0')}\r\n            `}</h2>\r\n\r\n            {\r\n                startTimer || props.saveLocalTime ? <button onClick={() => {\r\n                    didMount.current = false\r\n                    setTime('Select time')\r\n                    setStartTimer(false)\r\n                    clearInterval(interval)\r\n                    setFinishingTime(0)\r\n                    props.setCompletedTime((prev) => {\r\n                        let arrayTimes = [...prev[props.typeTimer]]\r\n\r\n                        arrayTimes[props.id] = {\r\n                            id: props.id,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00'\r\n                        }\r\n\r\n                        return {\r\n                            ...prev, \r\n                            [props.typeTimer]: [...arrayTimes]\r\n                        }\r\n                    })\r\n\r\n                    {\r\n                        let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n\r\n                        arrayTimes[props.typeTimer] = arrayTimes[props.typeTimer].filter(item => item.id !== props.item.id)\r\n                        localStorage.USER_TIME = JSON.stringify(arrayTimes)\r\n                    }\r\n                }}>Cancel</button>\r\n\r\n                :\r\n            \r\n                <> \r\n                    <select onClick={(e) => {\r\n                        setTime(e.target.options[e.target.selectedIndex].value)\r\n                    }}>                   \r\n                        <option>Select time</option>\r\n                        {\r\n                            props.times.map((item, i) => {\r\n                                return <option key={i} value={item.value}>{item.text}</option>\r\n                            })\r\n                        }  \r\n                    </select>\r\n            \r\n                    <button disabled={time === 'Select time' ? true : false} onClick={() => {\r\n                        setStartTimer(true)\r\n                        setFinishingTime(new Date())\r\n                    }}>Go</button>\r\n                </>\r\n            }\r\n\r\n            <button onClick={() => {\r\n                clearInterval(interval)\r\n                setRemoveTimer(true)\r\n            }}>Del</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Timer } from './Timer';\r\nimport './style/app.css'\r\n\r\nexport default function App() {\r\n    const [amountTimers, setAmountTimers] = useState(4);\r\n    const [completedTime, setCompletedTime] = useState({\r\n        COMM: [\r\n            \r\n        ],\r\n\r\n        BOOK: [\r\n\r\n        ],\r\n\r\n        PROJ: [\r\n\r\n        ]\r\n    });\r\n    const [useLC, setUseLC] = useState(false);\r\n\r\n    const commTimes = [\r\n        {text: '10:00:00', value: 'COMM_10_00_00'},\r\n        {text: '09:00:00', value: 'COMM_09_00_00'},\r\n        {text: '08:00:00', value: 'COMM_08_00_00'},\r\n        {text: '06:00:00', value: 'COMM_06_00_00'},\r\n        {text: '05:20:00', value: 'COMM_05_20_00'},\r\n        {text: '05:00:00', value: 'COMM_05_00_00'},\r\n        {text: '04:00:00', value: 'COMM_04_00_00'},\r\n        {text: '03:20:00', value: 'COMM_03_20_00'},\r\n        {text: '03:00:00', value: 'COMM_03_00_00'},\r\n        {text: '02:40:00', value: 'COMM_02_40_00'},\r\n        {text: '02:30:00', value: 'COMM_02_30_00'},\r\n        {text: '02:15:00', value: 'COMM_02_15_00'},\r\n        {text: '02:00:00', value: 'COMM_02_00_00'},\r\n        {text: '01:45:00', value: 'COMM_01_45_00'},\r\n        {text: '01:40:00', value: 'COMM_01_40_00'},\r\n        {text: '01:30:00', value: 'COMM_01_30_00'},\r\n        {text: '01:20:00', value: 'COMM_01_20_00'},\r\n        {text: '01:10:00', value: 'COMM_01_10_00'},\r\n        {text: '01:00:00', value: 'COMM_01_00_00'},\r\n        {text: '00:30:00', value: 'COMM_00_30_00'},\r\n        {text: '00:20:00', value: 'COMM_00_20_00'},\r\n        {text: '00:01:00', value: 'COMM_00_01_00'},\r\n    ]\r\n\r\n    const bookTimes = [\r\n        {text: '08:00:00', value: 'BOOK_08_00_00'},\r\n        {text: '04:00:00', value: 'BOOK_04_00_00'},\r\n        {text: '02:00:00', value: 'BOOK_02_00_00'}\r\n    ]\r\n    \r\n    const projTimes = [\r\n        {text: '12:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '10:00:00', value: 'PROJ_10_00_00'},\r\n        {text: '09:00:00', value: 'PROJ_09_00_00'},\r\n        {text: '08:00:00', value: 'PROJ_08_00_00'},\r\n        {text: '06:00:00', value: 'PROJ_06_00_00'},\r\n        {text: '05:00:00', value: 'PROJ_05_00_00'},\r\n        {text: '04:00:00', value: 'PROJ_04_00_00'},\r\n        {text: '03:00:00', value: 'PROJ_03_00_00'},\r\n        {text: '02:30:00', value: 'PROJ_02_30_00'},\r\n        {text: '02:00:00', value: 'PROJ_02_00_00'},\r\n        {text: '01:30:00', value: 'PROJ_01_30_00'},\r\n        {text: '01:00:00', value: 'PROJ_01_00_00'},\r\n        {text: '00:30:00', value: 'PROJ_00_30_00'},\r\n    ]\r\n\r\n    const setTime = (e) => {\r\n        let typeTimer = e.target.name\r\n\r\n        console.log(typeTimer)\r\n\r\n        completedTime[typeTimer].length ?\r\n            setCompletedTime((prev) => {\r\n                return {\r\n                    ...prev, \r\n                    [typeTimer]: [\r\n                        ...prev[typeTimer], {\r\n                            id: prev[typeTimer][prev[typeTimer].length - 1].id + 1,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00',\r\n                            completedTime: '00:00:00'\r\n                        }\r\n                    ],\r\n                }\r\n            })\r\n\r\n            :\r\n\r\n            setCompletedTime((prev) => {\r\n                return {\r\n                    ...prev, \r\n                    [typeTimer]: [\r\n                        ...prev[typeTimer], {\r\n                            id: 0,\r\n                            hours: '00',\r\n                            minutes: '00',\r\n                            seconds: '00',\r\n                            completedTime: '00:00:00'\r\n                        }\r\n                    ],\r\n                }\r\n            })  \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('USER_TIME')) {\r\n            let arrayTimes = JSON.parse(localStorage.getItem('USER_TIME'))\r\n            \r\n            if(arrayTimes.COMM.length || arrayTimes.BOOK.length || arrayTimes.PROJ.length) {\r\n                console.log(arrayTimes)\r\n                setCompletedTime(() => {return arrayTimes})\r\n\r\n                setUseLC(true)\r\n            }\r\n        } else {\r\n            localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n        }\r\n    }, [0])\r\n\r\n    return (\r\n        <div className='container'>\r\n            {/*  COMM */}\r\n            <div className='containerTimer'>\r\n                <div className='containerCommissionTitle'>\r\n                    <p>COMMISSION</p>\r\n\r\n                    <div className='containerCommissionTitleAvailable'>\r\n                        <p>Available {amountTimers - completedTime.COMM.length}</p>\r\n\r\n                        <label className='containerCommissionTitleEvent'>\r\n                            <p>Event</p>\r\n\r\n                            <input \r\n                                type='checkbox' \r\n                                onClick={(e) => {\r\n                                    setAmountTimers(e.target.checked ? 5 : 4)\r\n\r\n                                    {\r\n                                        completedTime.COMM.length === 5 &&\r\n                                            setCompletedTime((prev) => {\r\n                                                return {\r\n                                                    ...prev, \r\n                                                    COMM: [\r\n                                                        ...prev.COMM.slice(0, -1)\r\n                                                    ],\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        completedTime.COMM.length ? \r\n                            completedTime.COMM.map((item, i) => { \r\n                                return <Timer \r\n                                    item={item} \r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    completedTime={completedTime} \r\n                                    setCompletedTime={setCompletedTime}\r\n                                    times={commTimes}\r\n                                    typeTimer={'COMM'}\r\n                                    saveLocalTime={JSON.parse(localStorage.getItem('USER_TIME')).COMM[i] ? true : false}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    completedTime.COMM.length !== amountTimers && \r\n                        <button \r\n                            name='COMM'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            {/* BOOK */}\r\n            <div className='containerTimer'>\r\n                <div className='containerTitle'>\r\n                    <p>CLASSROOM</p>\r\n                    <div>Available {4 - completedTime.BOOK.length}</div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        completedTime.BOOK.length ? \r\n                            completedTime.BOOK.map((item, i) => {\r\n                                return <Timer \r\n                                    item={item} \r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    completedTime={completedTime} \r\n                                    setCompletedTime={setCompletedTime}\r\n                                    times={bookTimes}\r\n                                    typeTimer={'BOOK'}\r\n                                    saveLocalTime={JSON.parse(localStorage.getItem('USER_TIME')).BOOK[i] ? true : false}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    completedTime.BOOK.length !== 4 && \r\n                        <button \r\n                            name='BOOK'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            {/* PROJ */}\r\n            <div className='containerTimer'>\r\n                <div className='containerTitle'>\r\n                    <p>LAB</p>\r\n                    <div>Available {1 - completedTime.PROJ.length}</div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        completedTime.PROJ.length ? \r\n                            completedTime.PROJ.map((item, i) => {\r\n                                return <Timer \r\n                                    item={item} \r\n                                    key={item.id}\r\n                                    id={i}\r\n                                    completedTime={completedTime} \r\n                                    setCompletedTime={setCompletedTime}\r\n                                    times={projTimes}\r\n                                    typeTimer={'PROJ'}\r\n                                    saveLocalTime={JSON.parse(localStorage.getItem('USER_TIME')).PROJ[i] ? true : false}\r\n                                />\r\n                            })\r\n                        \r\n                            : \r\n                        \r\n                            <div className='availableTimer'>Not found</div>\r\n                    }\r\n                </div>\r\n                \r\n                {\r\n                    completedTime.PROJ.length !== 1 && \r\n                        <button \r\n                            name='PROJ'\r\n                            className='addTimer' \r\n                            onClick={(e) => {setTime(e)}}\r\n                        >+</button>\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                <br/>\r\n                <button onClick = {() => {\r\n                    localStorage.clear()\r\n                    localStorage.setItem('USER_TIME', (JSON.stringify({COMM:[], BOOK:[], PROJ:[]})));\r\n                }}\r\n                    \r\n                >Update LC</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}